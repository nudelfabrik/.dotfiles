# Remote Mount (sshfs)
# # creates mount folder and mounts the remote filesystem
rmount() {
   local host folder mname
       host="${1%%:*}:"
           [[ ${1%:} == ${host%%:*} ]] && folder='' || folder=${1##*:}
               if [[ $2 ]]; then
                       mname=$2
                           else
                                   mname=${folder##*/}
                                           [[ "$mname" == "" ]] && mname=${host%%:*}
                                               fi
                                                   if [[ $(grep -i "host ${host%%:*}" ~/.ssh/config) != '' ]]; then
                                                           mkdir -p ~/mounts/$mname > /dev/null
                                                                   sshfs $host$folder ~/mounts/$mname -oauto_cache,reconnect,defer_permissions,negative_vncache,volname=$mname,noappledouble && echo "mounted ~/mounts/$mname"
                                                                       else
                                                                               echo "No entry found for ${host%%:*}"
                                                                                       return 1
                                                                                           fi
                                                                                           }

                                                                                           # Remote Umount, unmounts and deletes local folder (experimental, watch you step)
                                                                                           rumount() {
                                                                                               if [[ $1 == "-a" ]]; then
                                                                                                       ls -1 ~/mounts/|while read dir
                                                                                                               do
                                                                                                                           [[ $(mount|grep "mounts/$dir") ]] && umount ~/mounts/$dir
                                                                                                                                       [[ $(ls ~/mounts/$dir) ]] || rm -rf ~/mounts/$dir
                                                                                                                                               done
                                                                                                                                                   else
                                                                                                                                                           [[ $(mount|grep "mounts/$1") ]] && umount ~/mounts/$1
                                                                                                                                                                   [[ $(ls ~/mounts/$1) ]] || rm -rf ~/mounts/$1
                                                                                                                                                                       fi
                                                                                                                                                                       }

# console by Brett Terpstra http://brettterpstra.com/a-simple-but-handy-bash-function-console/
function console () {
  if [[ $# > 0 ]]; then
    query=$(echo "$*"|tr -s ' ' '|')
    tail -f /var/log/system.log|grep -i --color=auto -E "$query"
  else
    tail -f /var/log/system.log
  fi
}


# http://brettterpstra.com/bash-completion-for-defaults-domains/
# Bash completion for `defaults` domains
# e.g. `defaults read com.apple[TAB]`
 
_complete_domain ()
{
	local cur
	local LC_ALL='C'
	cur=${COMP_WORDS[COMP_CWORD]}
	cur=${cur//\./\\\.} # escape dots for grep
	local IFS="
"
	COMPREPLY=( $(defaults domains | tr ',' '\n' | sed 's/^[ \t]*//;s/[ \t]*$//'|grep -i "^$cur") )
	return 0
}
 
complete -o bashdefault -o default -o nospace -F _complete_domain defaults 2>/dev/null || complete -o default -o nospace -F _complete_domain defaults
